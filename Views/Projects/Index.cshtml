@model IPagedList<StatTracker.Models.Project>

@using StatTracker.Services.Interfaces
@using StatTracker.Models.Enums
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@using StatTracker.Extensions;
@using Microsoft.AspNetCore.Identity;

@inject IBTFileService _btFileService
@inject UserManager<BTUser> _UserManager;
@inject IBTRolesService _btRoleService;
@inject IBTFileService _btFileService;
@inject IBTProjectService _btProjectService;

@{
    ViewData["Title"] = "Index";
    BTUser? btUser = await _UserManager.GetUserAsync(User);
}

@if (User.IsInRole(nameof(BTRoles.Admin)))
{
    <div class="row">
        <div class="col-sm-4">
            <a asp-controller="Projects" asp-action="Create" class="btn btn-purple rounded-pill w-md waves-effect waves-light mb-3"><i class="mdi mdi-plus"></i> Create Project</a>
            <a asp-controller="Invites" asp-action="Create" class="btn btn-purple rounded-pill w-md waves-effect waves-light mb-3"><i class="mdi mdi-plus"></i> Invite Member</a>
        </div>
    </div>
    <!-- end row -->
}


<div class="row rol-cols-3 g-3">
    @foreach (Project project in Model)
    {
        <div class="col-xl-4">
            <div class="card h-100">
                <div class="card-body project-box">
                    <div class="float-end">
                        @if (project.ProjectPriority?.Name == nameof(BTProjectPriorities.Urgent))
                        {
                            <span class="badge bg-danger font-13">@nameof(BTProjectPriorities.Urgent)</span>
                        }
                        else if (project.ProjectPriority?.Name == nameof(BTProjectPriorities.High))
                        {
                            <span class="badge bg-warning font-13">@nameof(BTProjectPriorities.High)</span>
                        }
                        else if (project.ProjectPriority?.Name == nameof(BTProjectPriorities.Medium))
                        {
                            <span class="badge bg-primary font-13">@nameof(BTProjectPriorities.Medium)</span>
                        }
                        else if (project.ProjectPriority?.Name == nameof(BTProjectPriorities.Low))
                        {
                            <span class="badge bg-success font-13">@nameof(BTProjectPriorities.Low)</span>
                        }
                    </div>
                    <h4 class="mt-0"><a asp-controller="Projects" asp-action="Details" asp-route-id="@project.Id" class="text-dark">@Html.DisplayFor(modelItem => project.Name)</a></h4>
                    @*<p class="text-muted font-13" style="overflow-y:auto;height:250px;">
                @Html.Raw(project.Description)
                </p>*@
                    <ul class="list-inline">
                        <li class="list-inline-item me-4">
                            <h5 class="mb-0">Start Date:</h5>
                            <p class="text-muted">@project.StartDate.ToString("MM/dd/yy hh tt")</p>
                        </li>
                        <li class="list-inline-item float-end text-end">
                            <h5 class="mb-0">End Date:</h5>
                            <p class="text-muted">@project.EndDate.ToString("MM/dd/yy hh tt")</p>
                        </li>
                    </ul>

                    <div class="project-members mb-2">
                        <h5 class="float-start me-3">Team :</h5>
                        <div class="avatar-group">
                            @foreach (BTUser user in project.Members)
                            {
                                <a href="#" class="avatar-group-item" data-bs-toggle="tooltip" data-bs-placement="top" title="@user.FullName">
                                    <img src="@_btFileService.ConvertByteArrayToFile(project.ImageFileData!, project.ImageFileType!, (int)DefaultImage.BTUserImage)" alt="Post Images" class="rounded-circle avatar-sm" />
                                </a>
                            }
                            @if (User.IsInRole(nameof(BTRoles.Admin)))
                            {
                                <a asp-action="AssignProjectMembers" asp-route-id="@project.Id" data-bs-toggle="tooltip" data-bs-placement="top" title="Assign a new member">
                                    <span class="add-new-plus"><i class="mdi mdi-plus"></i></span>
                                </a>
                            }
                        </div>
                    </div>

                    @*<h5>Progress <span class="text-success float-end">80%</span></h5>
                <div class="progress progress-bar-alt-success progress-sm">
                <div class="progress-bar bg-success progress-animated wow animated animated"
                role="progressbar" aria-valuenow="80" aria-valuemin="0" aria-valuemax="100"
                style="width: 80%; visibility: visible; animation-name: animationProgress;">
                </div><!-- /.progress-bar .progress-bar-danger -->
                </div><!-- /.progress .no-rounded -->*@
                    @* Razor code block *@
                    @{
                        var start = project.StartDate;
                        var end = project.EndDate;
                        var today = DateTime.Now;
                        var percent = today >= end ? 100 : today < start ? 0 : Math.Round((today.Subtract(start)) / (end.Subtract(start)) * 100);
                    }
                    <h5>Progress <span class="text-primary float-end">@percent %</span></h5>
                    <div class="progress progress-bar-alt-primary progress-sm">
                        <div class="progress-bar bg-primary progress-animated wow animated animated"
                             role="progressbar"
                             style="width: @percent%; visibility: visible; animation-name: animationProgress;">
                        </div>
                    </div>

                </div>
            </div>

        </div>

        <!-- end col-->
    }
</div>
<!-- end row -->

<div id="page-selector">
    <div>
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
    @Html.PagedListPager(Model, pageNum => Url.Action("Index", new { pageNum }),
    new PagedListRenderOptions {
    ContainerDivClasses = new string[] { "btn-group" },
    UlElementClasses = new string[] { "justify-content-center" },
    LiElementClasses = new string[] { "btn", "btn-purple", "fab", "fw-bold", "text-white", "me-2" },
    })
</div>

@section Scripts {
    <!-- Pagination -->
    <script>
        let a = document.createElement('a');
        let span = document.querySelector('#page-selector span');
        a.textContent = span.textContent;
        a.style.background = '#3858f6';
        a.style.color = "#ffffff";
        span.replaceWith(a);
    </script>
}
