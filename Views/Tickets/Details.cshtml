@model StatTracker.Models.Ticket

@using StatTracker.Services.Interfaces;
@using Microsoft.AspNetCore.Identity
@using StatTracker.Models.Enums
@using StatTracker.Services

@inject IBTFileService BTFileService
@inject UserManager<BTUser> UserManager

@{
    ViewData["Title"] = "Details";
}

<h1>Ticket Details</h1>

<div>
    <div classxfont-weighteighteightgetainer-fluid">
        <div class="row row-cols-2">
            <!-- Ticket Details -->
            <div class="col-md-8 col">
                <div class="col">
                    <div class="card">
                        <div class="card-body task-detail">
                            <div class="dropdown float-end">
                                <a href="#" class="dropdown-toggle arrow-none card-drop" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="mdi mdi-dots-vertical"></i>
                                </a>
                                <div class="dropdown-menu dropdown-menu-end">
                                    @if (User.IsInRole(nameof(BTRoles.Admin)) || User.IsInRole(nameof(BTRoles.ProjectManager)))
                                    {
                                        <!-- delete -->
                                        <a asp-action="Delete" asp-route-id="@Model?.Id" class="dropdown-item">Delete</a>
                                    }
                                    <!-- item-->
                                    <a asp-action="Index" asp-controller="TicketHistories" class="dropdown-item">History</a>
                                    <a asp-action="Index" asp-controller="TicketAttachments" class="dropdown-item">Attachments</a>
                                    @* <!-- item-->
                                    <a href="javascript:void(0);" class="dropdown-item">Something else</a>
                                    <!-- item-->
                                    <a href="javascript:void(0);" class="dropdown-item">Separated link</a>*@
                                </div>
                            </div>
                            <div class="d-flex mb-3">
                                <img class="flex-shrink-0 me-3 rounded-circle avatar-md" alt="64x64" src="@BTFileService.ConvertByteArrayToFile(Model!.Project!.ImageFileData!, Model!.Project!.ImageFileType!, (int)DefaultImage.ProjectImage)">
                                <div class="flex-grow-1">
                                    <h4 class="media-heading mt-0">@Html.DisplayFor(model => model.Title)</h4>
                                    <div>
                                        @if (Model.TicketPriority?.Name == nameof(BTTicketPriorities.Urgent))
                                        {
                                            <span class="badge bg-danger font-13">@nameof(BTTicketPriorities.Urgent)</span>
                                        }
                                        else if (Model.TicketPriority?.Name == nameof(BTTicketPriorities.High))
                                        {
                                            <span class="badge bg-warning font-13">@nameof(BTTicketPriorities.High)</span>
                                        }
                                        else if (Model.TicketPriority?.Name == nameof(BTTicketPriorities.Medium))
                                        {
                                            <span class="badge bg-primary font-13">@nameof(BTTicketPriorities.Medium)</span>
                                        }
                                        else if (Model.TicketPriority?.Name == nameof(BTTicketPriorities.Low))
                                        {
                                            <span class="badge bg-success font-13">@nameof(BTTicketPriorities.Low)</span>
                                        }
                                    </div>
                                </div>
                            </div>

                            <h4><strong>Project:</strong> @Html.DisplayFor(model => model.Project!.Name)</h4>

                            <p class="text-muted" style="overflow-y:auto;height:200px;">
                                <strong>Details:</strong> @Html.Raw(Model.Description)
                            </p>

                            <div class="row task-dates mb-0 mt-2">
                                <div class="col-lg-6">
                                    <h5 class="font-600 m-b-5">Start Date</h5>
                                    <p> <small class="text-muted">@Html.DisplayFor(model => model.Project!.StartDate)</small></p>
                                </div>

                                <div class="col-lg-6">
                                    <h5 class="font-600 m-b-5">Due Date</h5>
                                    <p> <small class="text-muted">@Html.DisplayFor(model => model.Project!.EndDate)</small></p>
                                </div>
                            </div>
                            <div class="clearfix"></div>

                            @* <div class="task-tags mt-2">
                            <h5>Tags</h5>
                            <input type="text" class="selectize-close-btn" value="Amsterdam,Washington,Sydney" data-role="tagsinput" placeholder="add tags" />
                            </div>*@

                            <div class="assign-team mt-3">
                                <h5>Assigned to</h5>
                                <div>
                                    @if (Model.DeveloperUser != null)
                                    {
                                        <a href="#"> <img class="rounded-circle avatar-sm" alt="64x64" src="@BTFileService.ConvertByteArrayToFile(Model.DeveloperUser!.ImageFileData!, Model.DeveloperUser!.ImageFileType!, (int)DefaultImage.BTUserImage)" title="@Model.DeveloperUser!.FullName"> </a>
                                    }
                                    @if (User.IsInRole(nameof(BTRoles.Admin)) || User.IsInRole(nameof(BTRoles.ProjectManager)))
                                    {
                                        <a asp-action="AssignDev" asp-controller="Tickets" asp-route-id="@Model.Id" data-bs-toggle="tooltip" data-bs-placement="top" title="Assign A Developer"><span class="add-new-plus"><i class="mdi mdi-plus"></i> </span></a>
                                    }
                                </div>
                            </div>

                        </div>
                    </div>

                </div><!-- end col -->
                <!--Ticket Comments card-->
                <div class="col">
                    <div class="card">
                        <div class="card-body">
                            <h3 class="mt-0 mb-3">Comments (@Model.Comments.Count)</h3>
                            <hr />
                            <div style="height: 400px; overflow-y:auto">
                                @*Loop to show comments made for the Ticket*@
                                @foreach (TicketComment comment in Model.Comments)
                                {
                                    <div class="d-flex mb-3">
                                        <div class="flex-shrink-0 me-3">
                                            @*<a href="#"> <img src="@BTFileService.ConvertByteArrayToFile(comment.BTUser!.ImageFileData!, comment.BTUser!.ImageFileType!, (int)DefaultImage.BTUserImage)" alt="Post Images" class="rounded-circle avatar-sm" /> </a>*@
                                        </div>
                                        <div class="flex-grow-1">
                                            <h5 class="mt-0">@comment.BTUser?.FullName</h5>
                                            <p class="font-15 text-muted mb-0">
                                                @comment.Comment
                                            </p>
                                        </div>
                                        @if (User.IsInRole("Admin"))
                                        {
                                            <div>
                                                <a asp-action="Delete" asp-controller="TicketComments" asp-route-id="@comment.Id" class="btn btn-sm btn-outline-danger rounded-pill w-md waves-effect waves-light mb-3"><i class="mdi mdi-archive"></i>Delete</a>
                                            </div>
                                        }
                                    </div>
                                }
                            </div>
                            @*Logic and form for comment*@
                            <form asp-action="AddTicketComment" asp-controller="Tickets" asp-route-id="@Model.Id" method="post">
                                <div class="row row--10">
                                    <div class="col-12">
                                        <div class="d-flex mb-3">
                                            <div class="me-3">
                                                @foreach (TicketComment comment in Model.Comments)
                                                {
                                                // User image
                                                    @*<a href="#"> <img src="@BTFileService.ConvertByteArrayToFile(comment.BTUser!.ImageFileData!, comment.BTUser!.ImageFileType!, (int)DefaultImage.BTUserImage)" alt="Post Images" class="rounded-circle avatar-sm" /> </a>*@
                                                }
                                            </div>
                                            <div class="flex-grow-1 form-group">
                                                @*<label for="comment">Leave a Comment</label>*@
                                                <input type="text" id="Comment" name="Comment" class="form-control" placeholder="Enter comment here...">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-12">
                                        <div class="form-submit cerchio">
                                            <input type="submit" class="btn btn-outline-info rounded-pill w-md waves-effect waves-light mb-3" value="Post Comment">
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>      <!-- End Ticket Comments card-->
                </div>
            </div>
            <div class="col-md-4">
                <!--   @*  <div class="card col m-1 p-2">
                         <div class="card-body">
                             @*Title of Ticket*@
                             <h5>Html.DisplayFor(model => model.Title)</h5>
                @*Description of Ticket*@
                             <p>Html.Raw(Model.Description)</p>
                             <div class="progress-container progress-info m-b-25">
                @*Project Name and information*@
                                 <span class="progress-badge" style="font-size:small">Project: Html.DisplayFor(model => model.Project!.Name)</span>
                                 <div class="progress">
                @*Progress bar logic*@
                @*Variable from razor logic*@
                                     <div class="progress-bar" role="progressbar" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100" style="width: [Percent]%;">
                @*Variable from razor logic*@
                                         <span class="progress-value">[Percent]%</span>
                                     </div>
                                 </div>
                             </div>
                         </div>
                     </div>
                     <div class="card col m-1 p-2">
                         <div class="card-body">
                             <ul class="list-unstyled">
                @*Ticket date*@
                                 <li><strong>Date Entered:</strong> <span class="">  Html.DisplayFor(model => model.Created)</</span></li>
                @*Project end date*@
                                 <li><strong>Deadline:</strong> <span class="">  Html.DisplayFor(model => model.Project!.EndDate)</</span></li>
                @*Ticket type*@
                                 <li><strong>Type:</strong> <span class="">  Html.DisplayFor(model => model.TicketType)</span></li>
                @*Ticket priority*@
                                 <li><strong>Priority:</strong> <span class="">  Html.DisplayFor(model => model.TicketPriority)</span></li>
                @*Ticket status*@
                                 <li><strong>Status:</strong> <span class="">  Html.DisplayFor(model => model.TicketStatus)</span></li>
                             </ul>
                         </div>
                         </div>* -->
                <!-- Ticket Attachment -->
                <!--Start Attachments-->
                <div class="col">
                    <div class="card">
                        <div class="card-body" style="height: 500px; overflow-y:auto">
                            <h3>Add File </h3>
                            <hr />
                            <ul class="list-inline files-list">
                                <form asp-action="AddTicketAttachment" asp-controller="Tickets" enctype="multipart/form-data" method="post">
                                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                    <input type="hidden" asp-for="@Model.Id" name="TicketId">
                                    <div class="media-body ml-3 mb-2 float">
                                        <label class="mb-1 w-100">
                                            Description
                                            <input asp-for="@Model.Attachments.FirstOrDefault()!.Description" type="text" class="form-control" />
                                        </label>
                                        <br />
                                        <label>
                                            <input asp-for="@Model.Attachments.FirstOrDefault()!.FormFile" type="file" class="form-control-file" />
                                        </label>
                                    </div>
                                    <div class="float text-end">
                                        <button type="submit" class="btn btn-outline-info rounded-pill md-btn-flat">Submit</button>
                                    </div>
                                    <h5 class="mt-3">Attached Files </h5>
                                    <hr />
                                    @foreach (TicketAttachment item in Model.Attachments)
                                    {
                                        <li class="list-inline-item file-box">
                                            <a asp-action="ShowFile" asp-controller="Tickets" asp-route-Id="@item.Id">
                                                <div class="icon">
                                                    <img src="@BTFileService.GetFileIcon(item.FileName!)" style="height:50px;width:50px" data-bs-toggle="tooltip" data-bs-placement="top" title="" data-bs-original-title="@item.FileName" />
                                                </div>
                                            </a>
                                            <div style="font-size:x-small">
                                                <div class="file-name">
                                                    <strong>@item.Description</strong>
                                                </div>
                                                <p class="font-13 mb-1 text-muted"><small>Size: @BTFileService.FormatFileSize(item.FileData!.Length) </small></p>
                                            </div>
                                                @if (User.IsInRole("Admin"))
                                                {
                                                <div> <a asp-action="Delete" asp-controller="TicketAttachments" asp-route-id="@item.Id" class="badge bg-danger float-start"><i class="mdi mdi-archive"></i> </a> </div>
                                                }
                                        </li>
                                    }
                                </form>
                            </ul>
                        </div>
                    </div> <!-- end card-body-->
                </div> <!--End Attachments-->
                <!-- Ticket History -->
                <div class="col">
                    <div class="card">
                        <div class="card-body" style="overflow-y:auto;height:1000px">
                            <h2>History</h2>
                            <hr />
                            @*Loop to show the history entries for the Ticket*@
                            @foreach (TicketHistory ticketHistory in Model.History)
                            {
                                <h4 class="mt-0">@ticketHistory.Created.ToString("MM/dd/yyyy hh:mm tt")</h4>
                                <p class="font-13 text-muted mb-0">
                                    - @ticketHistory.Description
                                </p>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-purple waves-effect waves-light me-2">Edit</a>
    <a asp-action="Index" class="btn btn-outline-secondary waves-effect waves-light">Back to Tickets</a>
</div>

@section Scripts{
    <partial name="_ValidationScriptsPartial" />

    <!--Sweet Alerts-->
    <script>
        let message = '@(ViewBag.SwalMessage)';
        if (!message.includes("Error") && message != '') {
            Swal.fire({
                backdrop: false,
                icon: 'success',
                title: message,
                showConfirmButton: true
            })
        } else if (message.includes("Error")) {
            Swal.fire({
                backdrop: false,
                icon: 'error',
                title: 'Oops...',
                text: message
            })
        }
    </script>
}
