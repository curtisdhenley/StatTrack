@model IPagedList<StatTracker.Models.Ticket>

@using StatTracker.Services.Interfaces
@using StatTracker.Models.Enums
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;

@inject IBTFileService _btFileService

@{
    ViewData["Title"] = "Index";
}

<h1>Tickets</h1>

<p>
    <a asp-action="Create" class="btn btn-purple rounded-pill">Create New</a>
    <a asp-action="unassignedTickets" class="btn btn-outline-secondary rounded-pill">Unassigned Tickets</a>
</p>
<div class="row">
    @foreach (var item in Model)
    {
        <div class="col-md-4">
            <div class="card h-99 mt-3">
                <div class="card-body">
                    <h4 class="card-title">
                        <strong>Issue:</strong> @Html.DisplayFor(modelItem => item.Title)
                    </h4>
                    @*<p class="card-text">
                @Html.DisplayFor(modelItem => item.Archived)
                </p>
                <p class="card-text">
                @Html.DisplayFor(modelItem => item.ArchivedByProject)
                </p>*@
                    <p class="card-text">
                        <strong>Details:</strong> @Html.DisplayFor(modelItem => item.Project!.Description)
                    </p>
                    @*<p class="card-text">
                @Html.DisplayFor(modelItem => item.TicketPriority!.Id)
                </p>
                <p class="card-text">
                @Html.DisplayFor(modelItem => item.TicketType!.Id)
                </p>
                <p class="card-text">
                @Html.DisplayFor(modelItem => item.TicketStatus!.Id)
                </p>*@
                    @if (item.DeveloperUser != null)
                    {
                        <p class="card-text">
                            <strong>Developer:</strong> @Html.DisplayFor(modelItem => item.DeveloperUser!.FullName)
                        </p>
                    }
                    else
                    {
                        <p class="card-text">
                            <strong>Developer:</strong> Unassigned
                        </p>
                    }
                    <p class="card-text">
                        <strong>Submitter:</strong> @Html.DisplayFor(modelItem => item.SubmitterUser!.FullName)
                    </p>
                    <p class="card-text">
                        <small class="text-muted">
                            <strong>Created:</strong> @Html.DisplayFor(modelItem => item.Created)
                        </small>
                    </p>
                    <p class="card-text">
                        <small class="text-muted">
                            <strong>Last Updated:</strong> @Html.DisplayFor(modelItem => item.Updated)
                        </small>
                    </p>
                </div>
                <div class="card-footer">
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning rounded-pill waves-effect waves-light">
                        <i class="bi bi-pencil-fill"></i>
                    </a>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info rounded-pill waves-effect waves-light">
                        <i class="bi bi-info-circle-fill"></i>
                    </a>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger rounded-pill waves-effect waves-light">
                        <i class="bi bi-trash-fill"></i>
                    </a>
                </div>
            </div>
        </div>
    }
</div>

<div id="page-selector">
    <div>
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
    @Html.PagedListPager(Model, pageNum => Url.Action("Index", new { pageNum }),
    new PagedListRenderOptions {
    ContainerDivClasses = new string[] { "btn-group" },
    UlElementClasses = new string[] { "justify-content-center" },
    LiElementClasses = new string[] { "btn", "btn-purple", "fab", "fw-bold", "text-white", "me-2" },
    })
</div>

@section Scripts {
    <!-- Pagination -->
    <script>
        let a = document.createElement('a');
        let span = document.querySelector('#page-selector span');
        a.textContent = span.textContent;
        a.style.background = '#3858f6';
        a.style.color = "#ffffff";
        span.replaceWith(a);
    </script>
}
