@model IEnumerable<StatTracker.Models.TicketHistory>

@{
    ViewData["Title"] = "Index";
}

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <h4 class="mt-0 header-title">Ticket History</h4>
                <table id="datatable" class="table table-bordered dt-responsive table-responsive nowrap">
                    <thead>
                        <tr>
                            <th>Ticket</th>
                            <th>Created</th>
                            <th>Previous</th>
                            <th>New</th>
                        </tr>
                    </thead>


                    <tbody>
                        @foreach (TicketHistory history in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => history.Ticket!.Title)</td>
                                <td>@Html.DisplayFor(modelItem => history.Created)</td>
                                <td>@Html.DisplayFor(modelItem => history.OldValue)</td>
                                <td>@Html.DisplayFor(modelItem => history.NewValue)</td>
                            </tr>
                        }
                    </tbody>
                </table>
                <a asp-action="Index" class="btn btn-outline-secondary waves-effect waves-light mt-2">Back to Tickets</a>
            </div>
        </div>
    </div>
</div> <!-- end row -->
<!--<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Html.DisplayNameFor(model => model.PropertyName)
            </th>
            <th>
                Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                Html.DisplayNameFor(model => model.Created)
            </th>
            <th>
                Html.DisplayNameFor(model => model.OldValue)
            </th>
            <th>
                Html.DisplayNameFor(model => model.NewValue)
            </th>
            <th>
                Html.DisplayNameFor(model => model.UserId)
            </th>
            <th>
                Html.DisplayNameFor(model => model.Ticket)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        foreach (var item in Model)
        {
            <tr>
                <td>
                    Html.DisplayFor(modelItem => item.PropertyName)
                </td>
                <td>
                    Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    Html.DisplayFor(modelItem => item.OldValue)
                </td>
                <td>
                    Html.DisplayFor(modelItem => item.NewValue)
                </td>
                <td>
                    Html.DisplayFor(modelItem => item.UserId)
                </td>
                <td>
                    Html.DisplayFor(modelItem => item.Ticket!.Description)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>-->
