@model DashboardViewModel

@using StatTracker.Models.Enums;
@using Microsoft.AspNetCore.Identity
@using StatTracker.Services.Interfaces

@inject SignInManager<BTUser> SignInManager
@inject UserManager<BTUser> UserManager
@inject IBTRolesService RoleService

@{
    ViewData["Title"] = "Dashboard";
    @* Instantiate the btUser *@
    BTUser? btUser = await UserManager.GetUserAsync(User);
    string? userRole = (await RoleService.GetUserRolesAsync(btUser)).FirstOrDefault();
    //int developerCount = (await RoleService.GetUsersInRoleAsync("Developer", btUser!.CompanyId)).Count();
}

<h1>Dashboard</h1>
@* Get The btUser FullName *@
<strong>@btUser!.FullName</strong>
<br />
<strong>@userRole</strong>
<br />
<span class="text-muted" style="font-size:x-small;">
    @* Company Name *@
    <strong>@Model.Company!.Name</strong>
</span>


<div>
    <div classxfont-weighteighteightgetainer-fluid">

        <!-- Info Pills -->
        <div class="row mt-3">
            <div class="col-lg-3 col-md-6 col-sm-6">
                <a asp-action="AllProjects" asp-controller="Projects" style="text-decoration:none">
                    <div class="card text-center bg-info">
                        <div class="body">
                            <div class="p-15 text-light">
                                <h3>@Model.Projects!.Where(p => p.StartDate < DateTime.Now && p.EndDate > DateTime.Now).Count()</h3>
                                <span>Active Projects</span>
                            </div>
                        </div>
                    </div>
                </a>
            </div>
            <div class="col-lg-3 col-md-6 col-sm-6">
                <a asp-action="AllTickets" asp-controller="Tickets" style="text-decoration:none">
                    <div class="card text-center bg-secondary">
                        <div class="body">
                            <div class="p-15">

                                <h3 class="text-light">@Model.Tickets!.Count()</h3>
                                <span>Total Tickets</span>
                            </div>
                        </div>
                    </div>
                </a>
            </div>
            <div class="col-lg-3 col-md-6 col-sm-6">
                <div class="card text-center bg-warning">
                    <div class="body">
                        <div class="p-15 text-light">
                            <h3>@Model.Tickets!.Where(t => string.IsNullOrEmpty(t.DeveloperUserId)).Count()</h3>
                            <span>Unassigned Tickets</span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6 col-sm-6">
                <div class="card text-center bg-dark">
                    <div class="body">
                        <div class="p-15">
                            <h3 class="text-light">
                                <!-- COMPLETED: review why this doesn't display ======================= -->
                                @(
                                    Model.Projects!.Count()
                                    + Model.Tickets!.Count()
                                    + Model.Members!.Count()
                                    )
                            </h3>
                            <span>Total Data</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>



        <div class="row gy-2">
            <div class="col-md-12 col">
                <div class="row col-cols-3 mt-3">
                    <!-- Project Priority Chart -->
                    <div class="card col m-1 p-2">
                        <div class="card-body">
                            <h4 class="header-title mt-0 mb-3">Projects by Priority</h4>

                            <div class="widget-box-2">
                                <!-- Morris: Donut -->
                                <div class="col-md-12">
                                    <div id="projectLegend" class="donut-legend" style="font-size:x-small"></div>
                                </div>
                                <div class="col-md-12">
                                    <div class="chart chart-md" id="morrisProjectPriority"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Ticket Status Chart -->
                    <div class="card col m-1 p-2">
                        <div class="card-body">
                            <h4 class="header-title mt-0 mb-3">Tickets by Status</h4>

                            <div class="widget-box-2">
                                <!-- Morris: Donut -->
                                <div class="col-md-12">
                                    <div id="statusLegend" class="donut-legend" style="font-size:x-small"></div>
                                </div>
                                <div class="col-md-12">
                                    <div class="chart chart-md" id="morrisTicketStatus"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Ticket Priority Chart -->
                    <div class="card col m-1 p-2">
                        <div class="card-body">
                            <h4 class="header-title mt-0 mb-3">Tickets by Priority</h4>

                            <div class="widget-box-2">
                                <!-- Morris: Donut -->
                                <div class="col-md-12">
                                    <div id="ticketLegend" class="donut-legend" style="font-size:x-small"></div>
                                </div>
                                <div class="col-md-12">
                                    <div class="chart chart-md" id="morrisTicketPriority"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <hr />
    <div class="mt-3">
        <div class="row">
            @* Projects Table *@
            <div class="col-md-6">
                <div class="card m-1 p-2">
                    <h2>Projects</h2>
                    <hr />
                    <div class="card-body" style="overflow-y:auto;height:600px;">
                        <table id="datatable" class="table table-bordered dt-responsive table-responsive nowrap">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Created</th>
                                    <th>Start Date</th>
                                    <th>End Date</th>
                                </tr>
                            </thead>


                            <tbody>
                                @foreach (Project project in Model.Projects!)
                                {
                                    <tr>
                                        <td>
                                            <a asp-action="Details" asp-controller="Projects" asp-route-id="@project.Id">@Html.DisplayFor(modelItem => project.Name)</a>
                                        </td>
                                        <td>@Html.DisplayFor(modelItem => project.Created)</td>
                                        <td>@Html.DisplayFor(modelItem => project.StartDate)</td>
                                        <td>@Html.DisplayFor(modelItem => project.EndDate)</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            @* Tickets Table *@
            <div class="col-md-6">
                <div class="card m-1 p-2">
                    <h2>Tickets</h2>
                    <hr />
                    <div class="card-body" style="overflow-y:auto;height:600px;">
                        <table id="datatable" class="table table-bordered dt-responsive table-responsive nowrap">
                            <thead>
                                <tr>
                                    <th>Title</th>
                                    <th>Created</th>
                                    <th>Developer</th>
                                    <th>Submitter</th>
                                </tr>
                            </thead>


                            <tbody>
                                @foreach (Ticket ticket in Model.Tickets!)
                                {
                                    <tr>
                                        <td>
                                            <a asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id">@Html.DisplayFor(modelItem => ticket.Title)</a>
                                        </td>
                                        <td>@Html.DisplayFor(modelItem => ticket.Created)</td>
                                        <td>@Html.DisplayFor(modelItem => ticket.DeveloperUser!.FullName)</td>
                                        <td>@Html.DisplayFor(modelItem => ticket.SubmitterUser!.FullName)</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="col-md-4 ">
                <div class="card m-1 p-2">
                    <h2>Members</h2>
                    <hr />
                    <div class="card-body" style="overflow-y:auto;height:300px;">
                        <table id="datatable" class="table table-bordered dt-responsive table-responsive nowrap">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Role</th>
                                </tr>
                            </thead>


                            <tbody>
                                @foreach (BTUser member in Model.Members!)
                                {
                                    <tr>
                                        <td>@Html.DisplayFor(modelItem => member.FullName)</td>
                                        <td>@Html.DisplayFor(modelItem => userRole)</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {

    @* Morris Donut Chart *@
    <script>

        // Project Priority
        var morrisProjectPriorityDonutData = [{
            label: "Low",
            value: @Model.Projects!.Where(p => p.ProjectPriority!.Name == nameof(BTProjectPriorities.Low)).Count()
                                                                    }, {
            label: "Medium",
            value: @Model.Projects!.Where(p => p.ProjectPriority!.Name == nameof(BTProjectPriorities.Medium)).Count()
                                                                    }, {
            label: "High",
            value: @Model.Projects!.Where(p => p.ProjectPriority!.Name == nameof(BTProjectPriorities.High)).Count()
                                                                    }, {
            label: "Urgent",
            value: @Model.Projects!.Where(p => p.ProjectPriority!.Name == nameof(BTProjectPriorities.Urgent)).Count()
                                                                    }];

        // Ticket Status
        var morrisTicketStatusDonutData = [{
            label: "New",
            value: @Model.Tickets!.Where(p => p.TicketStatus!.Name == nameof(BTTicketStatuses.New)).Count()
                                                                            }, {
            label: "Testing",
            value: @Model.Tickets!.Where(p => p.TicketStatus!.Name == nameof(BTTicketStatuses.Testing)).Count()
                                                                            }, {
            label: "Resolved",
            value: @Model.Tickets!.Where(p => p.TicketStatus!.Name == nameof(BTTicketStatuses.Resolved)).Count()
                                                                            }, {
            label: "Development",
            value: @Model.Tickets!.Where(p => p.TicketStatus!.Name == nameof(BTTicketStatuses.Development)).Count()
                                                                            }];

        // Ticket Priority
        var morrisTicketPriorityDonutData = [{
            label: "Low",
            value: @Model.Tickets!.Where(t => t.TicketPriority!.Name == nameof(BTTicketPriorities.Low)).Count()
                                                                }, {
            label: "Medium",
            value: @Model.Tickets!.Where(t => t.TicketPriority!.Name == nameof(BTTicketPriorities.Medium)).Count()
                                                                }, {
            label: "High",
            value: @Model.Tickets!.Where(t => t.TicketPriority!.Name == nameof(BTTicketPriorities.High)).Count()
                                                                }, {
            label: "Urgent",
            value: @Model.Tickets!.Where(t => t.TicketPriority!.Name == nameof(BTTicketPriorities.Urgent)).Count()
                                                                }];


        /*
        Morris: Donut
        */
        if ($('#morrisProjectPriority').get(0)) {
            var donutChart = Morris.Donut({
                resize: true,
                element: 'morrisProjectPriority',
                data: morrisProjectPriorityDonutData,
                colors: ['#0088cc', '#734ba9', '#E36159', '#ff993b']
            });

            donutChart.options.data.forEach(function (label, i) {
                var legendItem = $('<span></span>').text(label['label'] + ": " + label['value']).prepend('<span>&nbsp;</span>');
                legendItem.find('span')
                    .css('backgroundColor', donutChart.options.colors[i])
                    .css('width', '20px')
                    .css('display', 'inline-block')
                    .css('margin', '10px');
                $('#projectLegend').append(legendItem)
            });
        };

        if ($('#morrisTicketStatus').get(0)) {
            var donutChart = Morris.Donut({
                resize: true,
                element: 'morrisTicketStatus',
                data: morrisTicketStatusDonutData,
                colors: ['#0088cc', '#734ba9', '#E36159', '#ff993b']
            });

            donutChart.options.data.forEach(function (label, i) {
                var legendItem = $('<span></span>').text(label['label'] + ": " + label['value']).prepend('<span>&nbsp;</span>');
                legendItem.find('span')
                    .css('backgroundColor', donutChart.options.colors[i])
                    .css('width', '20px')
                    .css('display', 'inline-block')
                    .css('margin', '5px');
                $('#statusLegend').append(legendItem)
            });
        };

        if ($('#morrisTicketPriority').get(0)) {
            var donutChart = Morris.Donut({
                resize: true,
                element: 'morrisTicketPriority',
                data: morrisTicketPriorityDonutData,
                colors: ['#0088cc', '#734ba9', '#E36159', '#ff993b']
            });

            donutChart.options.data.forEach(function (label, i) {
                var legendItem = $('<span></span>').text(label['label'] + ": " + label['value']).prepend('<span>&nbsp;</span>');
                legendItem.find('span')
                    .css('backgroundColor', donutChart.options.colors[i])
                    .css('width', '20px')
                    .css('display', 'inline-block')
                    .css('margin', '10px');
                $('#ticketLegend').append(legendItem)
            });
        };
    </script>
}